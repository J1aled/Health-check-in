# This is a basic workflow to help you get started with Actions

name: Auto_daka_GitHub_Action

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
	branches: 
	  - master
  schedule:
	- cron: '0 22 * * *'


jobs:
  build:
<<<<<<< HEAD
	runs-on: ubuntu-latest
	steps:
	  - name :'Checkout codes'
		uses: actions/checkout@v2

	  - name: Set up Python
		uses: actions/setup-python@v2
		with:
		  python-version: '3.8'
	  - name: Install dependencies
		run: |
		  python -m pip install --upgrade pip
		  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
	  
	  - name: Install ChromeDriver
		  run: |
			CHROME_VERSION=$(google-chrome --version | cut -f 3 -d ' ' | cut -d '.' -f 1) \
			  && CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}) \
			  && curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip "http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip" \
			  && cd /tmp \
			  && unzip chromedriver_linux64.zip \
			  && rm -rf chromedriver_linux64.zip \
			  && sudo mv chromedriver /usr/local/bin/chromedriver \
			  && sudo chmod +x /usr/local/bin/chromedriver \
			  && chromedriver --version
	  
	  - name: 'Get Date'
		  run: echo "::set-env name=REPORT_DATE::$(TZ=':Asia/Chengdu' date '+%Y-%m-%d %T')"
	  - name: Run a py_script
		env:
		  CUIT_USER: ${{ secrets.USERNAME}}
		  CUIT_PASSWORD: ${{ secrets.PASSWORD}}
		run: |
		  python3 daka.py
	  
	  - name: 'Get Weather'
		run: bash ./weather.sh
	  - name: 'Get Date'
		run: echo "::set-env name=REPORT_DATE::$(TZ=':Asia/Chengdu' date '+%Y-%m-%d %T')"
	  - name: 'Send mail'
		uses: dawidd6/action-send-mail@master
		with:
		  server_address: smtp.126.com
		  server_port: 465
		  username: ${{ secrets.MAIL_USERNAME }}
		  password: ${{ secrets.MAIL_PASSWORD }}
		  subject: 健康打卡结果+今日天气预报 (${{env.REPORT_DATE}})
		  body: file://result.html, file://email.txt
		  to: 1971346995@qq.com
		  from: GitHub Actions
		  content_type: text/html
=======
	runs-on: ubuntu-latest
	steps:
	  - name: 'Checkout codes'
		uses: actions/checkout@v1

	  - name: Set up Python
		uses: actions/setup-python@v2
		with:
		  python-version: '3.8'
	  - name: Install dependencies
		run: |
		  python -m pip install --upgrade pip
		  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
	  
	  - name: Install ChromeDriver
		  run: |
			CHROME_VERSION=$(google-chrome --version | cut -f 3 -d ' ' | cut -d '.' -f 1) \
			  && CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}) \
			  && curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip "http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip" \
			  && cd /tmp \
			  && unzip chromedriver_linux64.zip \
			  && rm -rf chromedriver_linux64.zip \
			  && sudo mv chromedriver /usr/local/bin/chromedriver \
			  && sudo chmod +x /usr/local/bin/chromedriver \
			  && chromedriver --version
	  
	  - name: 'Get Date'
		  run: echo "::set-env name=REPORT_DATE::$(TZ=':Asia/Chengdu' date '+%Y-%m-%d %T')"
	  - name: Run a py_script
		env:
		  CUIT_USER: ${{ secrets.USERNAME}}
		  CUIT_PASSWORD: ${{ secrets.PASSWORD}}
		run: |
		  python3 daka.py
	  
	  - name: 'Get Weather'
		run: bash ./weather.sh
	  - name: 'Get Date'
		run: echo "::set-env name=REPORT_DATE::$(TZ=':Asia/Chengdu' date '+%Y-%m-%d %T')"
	  - name: 'Send mail'
		uses: dawidd6/action-send-mail@master
		with:
		  server_address: smtp.126.com
		  server_port: 465
		  username: ${{ secrets.MAIL_USERNAME }}
		  password: ${{ secrets.MAIL_PASSWORD }}
		  subject: 健康打卡结果+今日天气预报 (${{env.REPORT_DATE}})
		  body: file://result.html, file://email.txt
		  to: 1971346995@qq.com
		  from: GitHub Actions
		  content_type: text/html
>>>>>>> 3bc6c4e63d1feea91db4f9da0460689270352a0a
